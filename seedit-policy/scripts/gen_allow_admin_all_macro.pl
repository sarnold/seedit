#!/usr/bin/perl

#! SELinux Policy Editor, a simple editor for SELinux policies
#! Copyright (C) 2006 Yuichi Nakamura

# This tool is for developper
# generates allow_admin_all macro from security class

use Fcntl;

local @netlinkclass;
local @allclass;
local @attributes;
local $base_file;

while ($opt = shift @ARGV) {
    if ($opt eq "-i") { 
	$base_file = shift @ARGV; 
    }else{
	&print_usage();
	exit;
    }
}

if ($base_file  eq ""){
    &print_usage();
    exit;
}

read_security_classes($base_file);
get_attribute_list($base_file);

print "###Below macros are generated from base_policy dir by gen_allow_admin_all_macro.pl\n";

#print "###Following are automatically generated by genmacros.pl\n";
#out_netlink_macro();
out_all_macro();

sub get_attribute_list($){
    my  $dir = $_[0];
    my  $file = $dir."/attribute.te";
    sysopen(FILE,$file,O_RDONLY) or die "File open error:$file\n";
    while(<FILE>){
	my $line = $_;
	#skip spaces in the head of line
	if ($line=~/[^\s\t]+.+/)
	{
	    $line = $&;
	}
	
	if ($line=~/^attribute/){
	    my @tmp= split(/[\s\t]+/,$line);
	    my $attr = $tmp[1];
	    if($attr=~/;$/){
		chop($attr);
	    }
	    push @attributes,$attr;
	}
    }
}


sub read_security_classes($){
    $dir = $_[0];
    my $security_class_file = $dir."/security_classes";
    sysopen(FILE,$security_class_file,O_RDONLY) or die "File open error:$security_class_file\n";
    
    while(<FILE>){
	my $line = $_;
	#skip spaces in the head of line
	if ($line=~/[^\s\t]+.+/)
	{
	    $line = $&;
	}
	
	if ($line=~/^class/){
	    my @tmp= split(/[\s\t]+/,$line);
	    my $class = $tmp[1];	 
	    push @allclass, $class;
	    if ($class=~/^netlink/){
		push @netlinkclass, $class;
	    }
	}
    }
    close(FILE);
}


sub   print_usage(){
    print "Usage genmacros.pl -i <base_file>\n";
}

sub out_all_macro(){
    print "define(`all_attributes',`{";
    foreach(@attributes){
	my $attr = $_;
	print "$attr ";
    }
    print "}')\n";

    print "# allows all\n";
    print " define(`allow_admin_all',`\n";
    foreach (@allclass){
	my $class = $_;
	print "allow \$1 all_attributes:$class *;\n";
    }
    print "')\n";
}


sub out_netlink_macro(){
    print "# allows all netlink socket usage\n";
    print " define(`allow_admin_netlink',`\n";
    foreach (@netlinkclass){
	print "allow \$1 self:$_ *;\n";
    }
    print "')\n"
}

sub chop_newline($) {
    if ($_[0] eq "\n") {
	return;
    }    
    if ($_[0]=~/\n$/){
	chop($_[0]);
    }
}
    

